# Group Сценарий работы
Перед использованием Phone API клиент должен подключить данную функциональность в настройках МоегоСклада в каталоге Решений. Там происходит генерация [ключа доступа](#header-аутентификация).

Сценарий работы с Phone API состоит из нескольких шагов:
+ Создание сущности звонка
+ Рассылка событий карточки звонка (нотификации)
+ Обновление сущности звонка при его завершении/добавлении записи

Существующая функциональность МоегоСклада по работе со звонками состоит из следующих пунктов
+ Функциональность по просмотру истории звонков с контрагентами с возможностью прослушать запись разговора при её наличии
+ Отображение нотификаций о звонках, происходящих в данный момент
+ Возможность инициировать исходящий вызов

### Пример
Ниже, в качестве примера, описан один из возможных сценариев работы с Phone API, состоящий из следующих шагов:
+ Создание сущности звонка
+ Рассылка событий карточки звонка (нотификации)
+ Обновление сущности звонка при его завершении/добавлении записи

## Создать звонок  [/call]
### Создать звонок [POST]
Создаём сущность звонка, которая теперь доступна для просмотра как через интерфейс, так и через PhoneApi
+ Request Пример 1 (application/json)
Пример запроса для создания Звонка.
  + Headers
    Lognex-Phone-Auth-Token: d03627d59c1948a0f9a6aa1e267c954bfd0301ec

  + Body

            <!-- include(body/example/post_request.json) -->

+ Response 200 (application/json)
Успешный запрос. Результат - JSON представление созданного звонка.
  + Body

            <!-- include(body/example/post_response.json) -->

+ Request Пример 2 (application/json)
Пример запроса для создания Звонка с одновременным отображением нотификации.
  + Headers
    Lognex-Phone-Auth-Token: d03627d59c1948a0f9a6aa1e267c954bfd0301ec

  + Body

            <!-- include(body/example/post_withevent_request.json) -->

+ Response 200 (application/json)
Успешный запрос. Результат - JSON представление созданного звонка.
  + Body

            <!-- include(body/example/post_response.json) -->

##Послать событие карточки звонка [/call/{id}/event]
Событие карточки звонка с указанным id.
+ Parameters
  + id: `7944ef04-f831-11e5-7a69-971500188b19` (required, string) - id Звонка.

### Послать событие карточки звонка [POST]
Показываем нотификацию клиенту о том что начался звонок

+ Request Пример (application/json)
  + Headers
    Lognex-Phone-Auth-Token: d03627d59c1948a0f9a6aa1e267c954bfd0301ec

  + Body

            <!-- include(body/example/post_event_request.json) -->

+ Response 204 (application/json)
Успешный запрос.
  + Body

## Изменить звонок [/call/{id}]
+ Parameters
  + id: `89fc07ad-2c8d-11e6-8a84-bae500000051` (required, string) - id Звонка.

### Изменить звонок [PUT]
Обновляем звонок при его завершении/добавлении записи. Одновременно скрываем нотификаю.

+ Request Пример (application/json)
В теле запроса можно указать только те поля, которые необходимо изменить у звонка
  + Headers
    Lognex-Phone-Auth-Token: d03627d59c1948a0f9a6aa1e267c954bfd0301ec

  + Body

            <!-- include(body/example/put_request.json) -->

+ Response 200 (application/json)
Успешное обновление. Результат - JSON представление обновлённого Контрагента.
  + Body

            <!-- include(body/example/put_response.json) -->

## Найти сотрудников с добавочным номером [/employee?filter={filter}]
+ Parameters
  + filter: `extention~=12` (optional, string) - фильтр в запросе.
### Найти сотрудников с добавочным номером [GET]
Ищем сотрудников с добавочным номером с возможностью фильтрации в запросе по нему

+ Request Пример (application/json)
  + Headers
    Lognex-Phone-Auth-Token: d03627d59c1948a0f9a6aa1e267c954bfd0301ec

+ Response 200 (application/json)
Успешный поиск. Результат - JSON представление сотрудника.
  + Body

            <!-- include(body/example/employee_by_filter_response.json) -->