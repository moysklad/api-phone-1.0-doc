
# group Общие Сведения
## Аутентификация
Для того чтобы успешно взаимодействовать с Phone API онлайн-сервиса МойСклад необходимо аутентифицироваться в системе. МойСклад поддерживает аутентификацию через передачу в заголовке параметра `Lognex-Phone-Auth-Token` со значением ключа аутентификации, который генерируется для клиента при подключении Phone API на странице Приложений.

## Замечания по разработке клиентских приложений
При разработке клиентского приложения необходимо учитывать следующие моменты:
  + Структура ответов и типы полей поддерживаются нами неизменными
  + Может быть добавлено новое поле без нарушения структуры ответа
  + Может быть добавлен новый ресурс

## Ограничения
Для Phone API установлены следующие ограничения:
  + Не более 100 запросов за 5 секундный период
  + Не более 5 одновременных запросов от одного пользователя
  + Не более 100 одновременных запросов с одного ip-адреса


## Метаданные
В Phone API есть несколько видов Метаданных. Один из них - поле **meta**, которое фигурирует в большинстве
JSON представлений объектов, и содержит информацию об объекте или о выдаче, а также может использоваться в качестве ссылки
на другой объект. Поле **meta** представляет собой объект со следующими атрибутами:
+ **href** - Ссылка на объект
+ **type** - Тип объекта
+ **mediaType** - Тип данных, которые приходят в ответ от сервиса, либо отправляются
в теле запроса. В рамках данного  API всегда равен `application/json`


## Обработка ошибок
<h3>СТРУКТУРА ОШИБОК</h3>
Ошибка в данном API представляет собой массив **errors**, содержащий объекты **error**, каждый из которых описывает отдельную ошибку.
<h3>СТРУКТУРА ОБЪЕКТА error</h3>
+ **error** - Заголовок ошибки
+ **parameter** - Параметр, на котором произошла ошибка
+ **code** - Код ошибки (Если поле ничего не содержит, смотрите HTTP status code)
+ **error_message**  - Сообщение, прилагаемое к ошибке.

<h3>Возвращаемые HTTP статусы ошибок и их значения:</h3>
| HTTP status code | Значение                                                                                                                                           |
| :--------------: |:---------------------------------------------------------------------------------------------------------------------------------------------------|
| 301              | Запрашиваемый ресурс находится по другому URL.                                                                                                     |
| 400              | Ошибка в структуре JSON передаваемого запроса                                                                                                      |
| 401              | Имя и/или пароль пользователя указаны неверно или заблокированы пользователь или аккаунт                                                           |
| 403              | У вас нет прав на просмотр данного объекта                                                                                                         |
| 404              | Запрошенный ресурс не существует                                                                                                                   |
| 405              | http-метод указан неверно для запрошенного ресурса                                                                                                 |
| 409              | Указанный объект используется и не может быть удалён                                                                                               |
| 410              | Версия API больше не поддерживается                                                                                                                |
| 412              | Не указан обязательный параметр строки запроса или поле структуры JSON                                                                             |
| 413              | Размер запроса или количество элементов запроса превышает лимит (например, количество позиций, передаваемых в массиве **positions**, превышает 100)|
| 429              | Превышен лимит количества запросов                                                                                                                 |
| 500              | При обработке запроса возникла непредвиденная ошибка                                                                                               |
| 502              | Сервис временно недоступен                                                                                                                         |
| 503              | Сервис временно отключен                                                                                                                           |
| 504              | Превышен таймаут обращения к сервису, повторите попытку позднее                                                                                    |

Также, вместе с телом ответа ошибки, вам могут прийти следующие заголовки (Headers):
+ X-Lognex-Auth - расширенный код ошибки аутентификации
+ X-Lognex-Auth-Message - сообщение об ошибке.
+ X-Lognex-API-Version-Deprecated - дата отключения запрошенной версии API.
+ Location - URL по которому доступен запрашиваемый ресурс (в случае ответа с кодом 301)

<h2>Все коды ошибок и их описания</h2>
___
<div class="scrlable">
<!-- include(errors.apib) -->
</div>
___




## Создание и обновление объекта
При создании объекта достаточно заполнить только поля, помеченные `Необходимое`. Данные поля используются только при создании, при обновлении они не требуются.
Поля, помеченные `Только для чтения`, игнорируются при создании/обновлении объекта.


## Пустые поля
Если какое-то из полей сущности не было заполнено и, при этом оно не является обязательным, оно не будет выдано в JSON представлении этой сущности.

## Формат даты и времени
В Phone API поля типа дата-время (момент времени) - это строка в формате:
+ Без миллисекунд: `ГГГГ-ММ-ДД ЧЧ:мм:сс`
+ С миллисекундами: `ГГГГ-ММ-ДД ЧЧ:мм:сс.ммм`
Для получения полей типа дата-время с миллисекундами в формате: `ГГГГ-ММ-ДД ЧЧ:ММ:СС.ммм` нужно добавить специальный заголовок к запросу:<br>
`X-Lognex-Format-Millisecond` со значением `true`.
В запросах на создание/обновление сущностей, а также в параметрах фильтрации нужно указывать `moment` именно в этом формате.


## Вывод JSON с отступами
В Phone API можно получать ответы от сервера в виде pretty-print JSON (JSON с отступами вместо JSON в одну строку). Для этого нужно добавить специальный заголовок к запросу:<br>
`Lognex-Pretty-Print-JSON` со значением `true`.

## Фильтрация выборки с помощью параметра filter
Для фильтрации выборки по нескольким полям можно использовать url параметр `filter`.
Значение этого параметра - **urlencoded** строка с поисковыми условиями, перечисленными через `;`. (Все примеры ниже указаны без urlencoded для лучшей читаемости)
Каждое поисковое условие - это сочетание названия поля, оператора и константы.
Фильтровать можно по всем полям, значения которых являются примитивными типами. Т.е. нельзя фильтровать поля-объекты и поля-массивы,
все остальные поля могут быть использованы в параметре `filter`.

+ Допустимые операторы: `['=', '!=', '~', '~=', '=~']`

Если в поисковом запросе несколько раз встречается условие типа "равенство" `=` применённое к одному и тому же полю,
то такое условие интерпретируется как совокупность условий, разделённых логическим оператором `ИЛИ`.
+ Например условие `filter=sum=100;sum=150` будет интерпретировано как `sum=100 ИЛИ sum=150`
или же `sum in (100, 150)`

Если же встречается несколько условий вида "не равно" `!=`, наложенных на одну и ту же переменную, то они интерпретируются как совокупность
условий разделённых логическим оператором `И`.
+ Например условие `filter=name!=0001;name!=0002` будет эквивалентно следующим (взаимно эквивалентным) условиям :
`name != 0001 И name != 0002` или `name not in (0001, 0002)`

Если на одно из полей наложено ограничение типа "равенство", а затем на него накладывается ограничение типа неравенство - в таком случае произойдёт ошибка.
+ Например условие `filter=sum=100;sum!=99` вызовет ошибку.

<h3> Проверка на пустое значение </h3>
Если в строке фильтрации указать конструкцию вида: `<имя_поля>=;` то в выборку попадут только объекты, где
данное поле равно null (т.е. отсутствует значение), а если тип поля - строковое, то будет также выполнена проверка на пустую строку, т.е. поле=''.
Конструкция `<имя_поля>!=;` выполнит проверку на присутствие значения. С помощью данной конструкции можно проверить наличие значения в ссылочном поле.

<h3>Фильтрация работников по внутреннему номеру</h3>
Для фильтрации выборки следует использовать параметр **extention**. Параметр является строковым.
Примеры фильтров
+ `filter=extention=101`
+ `filter=extention~=10`


<!-- include(usecase.apib) -->
<!-- include(call.apib) -->
<!-- include(employee.apib) -->
<!-- include(outgoingcall.apib) -->
